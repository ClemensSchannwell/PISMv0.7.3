#!/usr/bin/env python

UNDER CONSTRUCTION ONLY; FOR NOW SEE runcase.sh

## @package runcase
## \author Ed Bueler, University of Alaska Fairbanks, USA
## \brief A script for running one case of pclimate in process of tuning PDD parameters.
## Copyright (C) 2010 Ed Bueler
##
## see README for role of this script
## This script uses NCO (http://nco.sourceforge.net/).

import sys, getopt, time, commands
from numpy import array, double, int

#DIFFSFILE=$6  # file which this script MODIFIES by appending a line of
#   results; if runcase.sh has no 6th argument, then, because
#   of how objective.py works, the results will appear at stdout

# name of PISM file with Greenland geometry and precip,smb from Ettema et al.
#   and other needed info to run pclimate:
DATANAME = "Greenland_5km_v1.1.nc"
PISMDATA = "pism_" + DATANAME        

BASECONFIG = "base_config.nc"      # name of -config_override, for modification

STARTFILE = "start.nc"             # name of file generated by pismr; see boot.sh


if __name__ == "__main__":
    try:
      opts, args = getopt(argv[1:], "s:t:r:d:", ["snow=", "thresh=", "refreeze=", 
                                         "stddev=", "help","usage"])
    except GetoptError:
      usagefailure('ERROR: INCORRECT COMMAND LINE ARGUMENTS FOR below.py')
    ddfsnow = 0.003
    threshold = 273.15
    refreeze = 0.6
    stddev = 2.53
    for (opt, optarg) in opts:
        if opt in ("-s", "--snow"):
            ddfsnow = float(optarg)
        if opt in ("-t", "--thresh"):
            threshhold = float(optarg)
        if opt in ("-r", "--refreeze"):
            refreeze = float(optarg)
        if opt in ("-d", "--stddev"):
            stddev = 2.53
        if opt in ("--help", "--usage"):
            print usage
            exit(0)

    ddfice = 2.0 * ddfsnow
    
    NAMEROOT = "%.2f_%.4f_%.2f_%.2f" % (threshhold, ddfsnow, refreeze, stddev)
    print "case = "+ nameroot + ":"

    config = "config_" + nameroot + ".nc"
    configopt = "-config_override  " + config
    print "  creating -config_override file %s ..." % config

rm -rf $CONFIG
ncks -O $BASECONFIG $CONFIG      
ncatted -O -a pdd_positive_threshold_temp,pism_overrides,m,d,$THRESHOLD $CONFIG
ncatted -O -a pdd_factor_snow,pism_overrides,m,d,$DDFSNOW $CONFIG
ncatted -O -a pdd_factor_ice,pism_overrides,m,d,$DDFICE $CONFIG
ncatted -O -a pdd_refreeze,pism_overrides,m,d,$REFREEZE $CONFIG
ncatted -O -a pdd_std_dev,pism_overrides,m,d,$STDDEV $CONFIG

CLIMATE=clim_${NAMEROOT}.nc    # name of output of pclimate, which will be
                               #   evaluated against $PISMDATA

# change this to "mpiexec -n 8" or similar to run on multiple processes
MPIDO=""
# coupler settings: Fausto 2m air temp parameterization, but default PDD
#   (w/o Greve/Fausto settings of PDD parameters)
COUPLER="-atmosphere searise_greenland -surface pdd"
CLIMSTARTTIME=1990
CLIMENDTIME=1991
#DT=0.0833333333 # monthly = (1/12) of year
DT=1.0
echo
echo "$SCRIPTNAME  running pclimate with -config_override file $CONFIG to generate"
echo "$SCRIPTNAME    $CLIMATE containing ice surface mass balance 'acab'"


command = mpido + " pclimate -i " + startfile + coupler + " -config_override " + config + " -ys " + climstarttime + " -ye " + climendtime + " -dt " + dt + " -o " + climatefile
#$MPIDO pclimate -i $STARTFILE $COUPLER -config_override $CONFIG \
#  -ys $CLIMSTARTTIME -ye $CLIMENDTIME -dt $DT -o $CLIMATE

    # run PISM:
    try:
        lasttime = time.time()
        (status,output) = commands.getstatusoutput(command)
        elapsetime = time.time() - lasttime      
    except KeyboardInterrupt:
        sys.exit(2)
    if status:
        sys.exit(status)
    print ' finished in %7.4f seconds; reported numerical errors as follows:' % elapsetime
  
echo "$SCRIPTNAME  deleting $CONFIG ... no longer needed ..."
rm -rf $CONFIG  # don't need this file any more BECAUSE pism_overrides are
                #   carried forward into $OUTFILE

echo "  computing objective functions by comparing 'acab' in $CLIMATE"
echo "    to 'smb' in $PISMDATA and putting objective value in $DIFFSFILE"
./objective.py -v acab,smb -H $STARTFILE $CLIMATE $PISMDATA $DIFFSFILE
echo

if [ -n "${DELETECLIMATE:+1}" ] ; then
  echo "$SCRIPTNAME  env var DELETECLIMATE set so deleting $CLIMATE ..."
  rm -rf $CLIMATE
fi

echo

