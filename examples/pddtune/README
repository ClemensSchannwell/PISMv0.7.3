The scripts in this file demonstrate how to tune PDD parameters to match
regional climate model output available in a publicly-available data set.

The data set we use is the v1.1 version of the SeaRISE-Greenland data:
  http://websrv.cs.umt.edu/isis/images/a/a5/Greenland_5km_v1.1.nc
  
The fields "presprcp", "runoff", and "smb" (surface mass balance) in this data
set are from the RACMO/GR model.  They are described in this paper:
  Ettema J., et al. (2009), "Higher surface mass balance of the Greenland ice
  sheet revealed by high-resolution climate modeling", Geophys. Res. Lett.,
  36, L12501, doi:10.1029/2009GL038110

The tuning procedure is to adjust these PDD parameters; [X] is default value:
  pdd_positive_threshold_temp [273.15 K]
  pdd_factor_snow             [0.003 m K-1 day-1]
  pdd_refreeze                [0.6]
  pdd_std_dev                 [2.53 K]

The degree-day factor for ice (pdd_factor_ice) is set to exactly double that for snow; see Hock (2005) for example.

The top-level script is dotune.sh.  It does this for each case:
  -- calls runcase.sh
  -- calls objective.py to compute differences and norms between 'smb' and 'acab'

Additional actions are needed before and after using dotune.sh.  Do this:

  1.  download and clean-up metadata in the SeaRISE-Greenland
      file, in preparation for next steps; also runs ncgen on the base .cdl version of
      the configuration file; this file has 'smb' in the right units:
        $ ./preprocess.sh

  2.  create a PISM-output file of the type pclimate can read:
        $ ./boot.sh
  
  3.  run pclimate over ranges of parameters, generating cases and evaluating
      the difference relative to Ettema's surface mass balance; calls linesearch.py;
      generates textfile "diffs.txt" but deletes pclimate outputs and config files:
        $ ./dotune.sh >> out.dotune &

      WAIT until it is finished; monitor diffs.txt:
        $ less diffs.txt

  4.  find the cases with the lowest values of the weighted objective:
        $ ./below.py -c 5 -l 5.0 diffs.txt | wc -l  # counts cases
        $ ./below.py -c 5 -l 2.0 diffs.txt          # shows cases

  5.  once you have a case you like from the above, say
        clim_268_0.001_0.4_1.0.nc
      now regenerate this pclimate output, and make it nicer to look at by
      masking:
        $ ./linesearch.py --thresh=268 --snow=0.001 --refreeze=0.4 --stddev=1.0
        $ ./thkmask.py -H start.nc -v acab,smelt,srunoff,saccum clim_268_0.001_0.4_1.0.nc

  6.  view it, comparing to target field 'smb' in same units in data file:
        $ ncview clim_268_0.001_0.4_1.0.nc &
        $ ncview pism_Greenland_5km_v1.1.nc &
      note that, besides in the file names, the PDD parameter choices are
      attributes of variable 'pism_overrides' in the NetCDF files from pclimate

