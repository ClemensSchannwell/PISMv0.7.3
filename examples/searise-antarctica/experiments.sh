#!/bin/bash

##################################################################################
# SeaRISE Experiments with PISM trunk (tested for revision 1844) using Data from Anne Le Brocq (from SeaRISE wiki)...
#...with PIK physics (winkelmann_martin11), mostly as described in martin_winkelmann11 but with enthalpy model
#...with constant climate, using constant Precip and a parameterization for artm as in martin_winkelmann11
#...performing the SeaRISE experiments as described in http://websrv.cs.umt.edu/isis/index.php/Category_1:_Whole_Ice_Sheet
##################################################################################

echo "(experiments.sh)   need to run preprocess.sh and antspinCC.sh or antspinGC.sh before this..."
#inputs generated by preprocess.sh:   	present day: pism_Antarctica_5km.nc 
#					glacial cycle spinup: pism_dT.nc pism_dSL.nc
#					future climate data:  ar4_ant_acab_anomaly_scalefactor_1.0.nc (as well as scalefactors 1.5 and 2.0)
#							      ar4_ant_artm_anomaly_scalefactor_1.0.nc (as well as scalefactors 1.5 and 2.0)

set -e  # exit on error

echo "(experiments.sh)   Running the SeaRISE experiments now..."



experiment=seaRISE
version=pism-dev
output_path=./results/$experiment/$scriptname/$laufname
scriptname=experiments
laufname=ConstantClimate

# naming directories
RESDIR=$output_path/$scriptname/$laufname/results/ 
OUTDIR=$output_path/$scriptname/$laufname/output/ 
CODE_DIR=../../bin/
BOOTDIR=.

# naming files
SCRIPTNAME="experiments.sh"
PISM_EXEC=$CODE_DIR/pismr
# for echo:
PISM_EXEC="$CODE_DIR/pismr"
echo "$SCRIPTNAME       PISM_EXEC = $PISM_EXEC"

# creating directories for results
mkdir $output_path/results
mkdir $output_path/results/$experiment/
mkdir $output_path/results/$experiment/$scriptname
mkdir $output_path/results/$experiment/$scriptname/$laufname
mkdir $output_path/results/$experiment/$scriptname/$laufname/output
mkdir $output_path/results/$experiment/$scriptname/$laufname/results

# input data:
PISM_INDATANAME=./results/$experiment/spinupStSt/$laufname/run.nc

###################################################################
NN=16  # default number of processors
if [ $# -gt 0 ] ; then  # if user says "antspinup.sh 8" then NN = 8
  NN="$1"
fi

echo "$SCRIPTNAME              NN = $NN"
set -e  # exit on error

###################################################################

if [ -n "${PISM_ON_CLUSTER:+1}" ]; then  # check if env var is set
  echo "$SCRIPTNAME this run was submitted, use MPI"
  PISM_MPIDO="mpiexec -machinefile ./log/hostlist -n"
  echo "$SCRIPTNAME      PISM_MPIDO = $PISM_MPIDO"
else
  echo "$SCRIPTNAME this is interactive, skip use of MPI"
  PISM_MPIDO=""
  NN=""
  echo "$SCRIPTNAME      PISM_MPIDO = $PISM_MPIDO"
fi

# check if env var PISM_DO was set (i.e. PISM_DO=echo for a 'dry' run) #I think I do not use this!!!
if [ -n "${PISM_DO:+1}" ] ; then  # check if env var DO is already set
  echo "$SCRIPTNAME         PISM_DO = $PISM_DO  (already set)"
else
  PISM_DO="" 
fi
DO=$PISM_DO
###################################################################

### RUNTIME options:

# grids
THIRTYKMGRID="-Mx 200 -My 200 -Lz 5000 -Lbz 2000 -Mz 41 -Mbz 16"
TWENTYKMGRID="-Mx 300 -My 300 -Lz 5000 -Lbz 2000 -Mz 41 -Mbz 16"
FIFTEENKMGRID="-Mx 400 -My 400 -Lz 5000 -Lbz 2000 -Mz 81 -Mbz 21"
TWELVEKMGRID="-Mx 500 -My 500 -Lz 5000 -Lbz 2000 -Mz 101 -Mbz 31"
TENKMGRID="-Mx 600 -My 600 -Lz 5000 -Lbz 2000 -Mz 101 -Mbz 31"
SEVENKMGRID="-Mx 900 -My 900 -Lz 5000 -Lbz 2000 -Mz 151 -Mbz 31"
FIVEKMGRID="-Mx 1200 -My 1200 -Lz 5000 -Lbz 2000 -Mz 201 -Mbz 51"

# skips:  
SKIPTHIRTYKM=50
SKIPTWENTYKM=50
SKIPFIFTEENKM=50
SKIPTWELVEKM=50
SKIPTENKM=100
SKIPSEVENKM=100
SKIPFIVEKM=200

SIA_ENHANCEMENT="-e 4.5"

#PIK-stuff:
#INFO: in pism, the option '-pik' is implemented, and activates '-cfbc -part_grid -part_redist -kill_icebergs'
#INFO: -meltfactor_pik 5e-3 is default when using -ocean pik
PIKPHYS="-ssa_method fd -e_ssa 0.8 -pik -eigen_calving 2.0e18 -calving_at_thickness 50.0"
PIKPHYS_COUPLING="-surface pik -ocean pik -meltfactor_pik 8e-3"

# sliding related options:
PARAMS="-pseudo_plastic_q 0.25 -plastic_pwfrac 0.98"
TILLPHI="-topg_to_phi 5.0,20.0,-300.0,700.0,10.0"
#TILLPHI="-topg_to_phi 5.0,20.0,-1000.0,0.0,10.0" # as in martin_winkelmann11
FULLPHYS="-ssa_sliding -thk_eff $PARAMS $TILLPHI"



echo "$SCRIPTNAME             PISM = $PISM_EXEC"
echo "$SCRIPTNAME  	  FULLPHYS = $FULLPHYS"
echo "$SCRIPTNAME  	   PIKPHYS = $PIKPHYS"
echo "$SCRIPTNAME PIKPHYS_COUPLING = $PIKPHYS_COUPLING"

###################################################################

expackage="-extra_vars usurf,topg,thk,bmelt,bwat,bwp,dHdt,mask,velsurf,wvelsurf,velbase,wvelbase,tempsurf,tempbase,diffusivity,acab,cbase,csurf"
tspackage="-ts_vars ivol,iareag,iareaf"

STARTTIME=0
ENDTIME=500

TIMES=${STARTTIME}:5:${ENDTIME}
TSTIMES=${STARTTIME}:1:${ENDTIME}

# #######################################
# Control Run E0
# #######################################
stage=E0
INNAME=$PISM_INDATANAME
RESNAME=${RESDIR}$stage.nc
OUTNAME=${OUTDIR}$stage.out
TSNAME=${RESDIR}ts_$stage.nc
EXTRANAME=${RESDIR}extra_$stage.nc

echo
echo "$SCRIPTNAME Running SeaRISE Experiment M"
cmd="$PISM_MPIDO $NN $PISM_EXEC -skip 10 -i $INNAME \
	$SIA_ENHANCEMENT $PIKPHYS_COUPLING $PIKPHYS $FULLPHYS \
	-ys $STARTTIME -ye $ENDTIME \
	-ts_file $TSNAME -ts_times $TSTIMES $tspackage \
	-extra_file $EXTRANAME -extra_times $TIMES $expackage \
	-o $RESNAME -o_size big"
echo $DO $cmd
$DO $cmd >> $OUTNAME
echo
echo "$SCRIPTNAME  Control Run done... will need post-processing"
echo


# #######################################
# Melt Rate Experiments M
# #######################################
MELTRATE=1
for melt_rate in 2 20 200; do

	stage="M$MELTRATE"
	INNAME=$PISM_INDATANAME
	RESNAME=${RESDIR}$stage.nc
	OUTNAME=${OUTDIR}$stage.out
	TSNAME=${RESDIR}ts_$stage.nc
	EXTRANAME=${RESDIR}extra_$stage.nc

	echo
	echo "$SCRIPTNAME Running SeaRISE Experiment M"
	cmd="$PISM_MPIDO $NN $PISM_EXEC -skip 10 -i $INNAME \
		$SIA_ENHANCEMENT -surface pik $PIKPHYS $FULLPHYS \
		-ys $STARTTIME -ye $ENDTIME \
		-shelf_base_melt_rate $melt_rate \
		-ts_file $TSNAME -ts_times $TSTIMES $tspackage \
		-extra_file $EXTRANAME -extra_times $TIMES $expackage \
		-o $RESNAME -o_size big"
	echo $DO $cmd
	$DO $cmd >> $OUTNAME
	echo
	echo "$SCRIPTNAME  Experiment M$MELTRATE done... will need post-processing"
	echo

	MELTRATE=$(($MELTRATE + 1))
done


# #######################################
# Melt Rate Experiments S
# #######################################
SLIDING=1
for sliding_scale_factor in 2 2.5 3; do

	stage="S$SLIDING"
	INNAME=$PISM_INDATANAME
	RESNAME=${RESDIR}$stage.nc
	OUTNAME=${OUTDIR}$stage.out
	TSNAME=${RESDIR}ts_$stage.nc
	EXTRANAME=${RESDIR}extra_$stage.nc

	echo
	echo "$SCRIPTNAME Running SeaRISE Experiment S"
	cmd="$PISM_MPIDO $NN $PISM_EXEC -skip 10 -i $INNAME \
		$SIA_ENHANCEMENT $PIKPHYS_COUPLING $PIKPHYS $FULLPHYS \
		-ys $STARTTIME -ye $ENDTIME \
  		-sliding_scale $sliding_scale_factor \
		-ts_file $TSNAME -ts_times $TSTIMES $tspackage \
		-extra_file $EXTRANAME -extra_times $TIMES $expackage \
		-o $RESNAME -o_size big"
	echo $DO $cmd
	$DO $cmd >> $OUTNAME
	echo
	echo "$SCRIPTNAME  Experiments S$SLIDING done... will need post-processing"
	echo

	SLIDING=$(($SLIDING + 1))
done


# #######################################
# Melt Rate Experiments C
# #######################################

CLIMATE=2
SRGEXPERCATEGORY=E0
for climate_scale_factor in 1.0 1.5 2.0; do

#    AR4_ANT=${BOOTDIR}/ar4_ant_scalefactor_${climate_scale_factor}.nc # this is not using anomalies, resulting in a jump in artm climate...
    AR4_ANT_ACAB=${BOOTDIR}/ar4_ant_acab_scalefactor_${climate_scale_factor}.nc
    AR4_ANT_ARTM=${BOOTDIR}/ar4_ant_artm_scalefactor_${climate_scale_factor}.nc

	stage="C$CLIMATE"_"E0"
	INNAME=$PISM_INDATANAME
	RESNAME=${RESDIR}$stage.nc
	OUTNAME=${OUTDIR}$stage.out
	TSNAME=${RESDIR}ts_$stage.nc
	EXTRANAME=${RESDIR}extra_$stage.nc

	echo
	echo "$SCRIPTNAME Running SeaRISE Experiment C$CLIMATE"
	cmd="$PISM_MPIDO $NN $PISM_EXEC -skip 10 -i $INNAME \
		$SIA_ENHANCEMENT $PIKPHYS_COUPLING $PIKPHYS $FULLPHYS \
		-ys $STARTTIME -ye $ENDTIME \
		-atmosphere given,anomaly -anomaly_temp $AR4_ANT_ARTM -anomaly_precip $AR4_ANT_ACAB \ #TODO This does not work!!!
		-ts_file $TSNAME -ts_times $TSTIMES $tspackage \
		-extra_file $EXTRANAME -extra_times $TIMES $expackage \
		-o $RESNAME -o_size big"
	echo $DO $cmd
	$DO $cmd >> $OUTNAME
	echo
	echo "$SCRIPTNAME  Experiment C$CLIMATE done... will need post-processing"
	echo

	CLIMATE=$(($CLIMATE + 1))
done




echo
echo "$SCRIPTNAME  All Experiments done"









