#!/bin/bash
 
# Script for MISMIP = Marine Ice Sheet Intercomparison Project.  See
#    http://homepages.ulb.ac.be/~fpattyn/mismip/
# and especially mismip_4.pdf (or latest version of intercomparison
# description) at that site.

# This intercomparison describes a flow line ice stream and ice shelf
# system.  PISM is a 3D model so there is a notable lack of efficiency
# relative to flow line models.  Furthermore there is (for now) no 
# boundary layer or other advanced treatment of dynamics in the vicinity 
# of the grounding line; compare C. Schoof, (2007). "Marine ice-sheet
# dynamics. Part 1. The case of rapid sliding," J. Fluid Mech., vol. 573,
# pp. 27â€“55.  Also there is no calving front boundary condition; compare 
# EISMINT-Ross on this issue.  See also comments at start of
# src/ismip/iceMISMIPModel.cc regarding grounding line flux issues.

# There are two models: Model one ("ABC1_...") uses only the SSA.
# Model two ("ABC2_...") is an average of SSA and SIA velocities.

# A PISM MISMIP run always saves an ASCII file in the MISMIP specified format:
#   ABC1_1b_M1_A1_t
# and a standard PISM NetCDF file
#   ABC1_1b_M1_A1.nc
# If the run achieves steady state by the MISMIP criterion, then the run also
# saves two more ASCII files in the MISMIP spec format:
#   ABC1_1b_M1_A1_ss
#   ABC1_1b_M1_A1_f
# See intercomparison description (URL above) for format of these files.  Also
#   ABC1_1b_M1_A1_extras
# may be written.

# See scripts figMISMIP.py and makefigs.sh for creating figures from outputs.

# RUN "./mismip.sh 4 D" TO SEE THE PISM CALLS GENERATED BY THIS SCRIPT!
# THERE ARE A LOT! (HUNDREDS, IN SOME GRIDRANGE ETC. CASES)


NN=2               # set default number of processors here

MPIDO=mpiexec      # change this if need "mpirun", etc.

MYINITIALS=EBU     # MISMIP says "first character of the first name followed
                   #    by the first two characters of the last name"

MODELRANGE="1 2"   # model 1 is pure SSA, model 2 is SIA+SSA

#GRIDRANGE="1 2 3" # grid 1 is "-My 151", grid 2 is "-My 1501", grid 3 is "-My 601"
                   # 3 is slow, 2 is practically impossible!!
GRIDRANGE="1"


if [ $# -gt 0 ] ; then  # if user says "mismip.sh 8" then NN = 8
  NN="$1"
fi

SHOWONLY=0
if [ $# -gt 1 ] ; then  # if user says "mismip.sh 8 D" then NN = 8 and only shows; no run 
  SHOWONLY=1
fi

set -e  # exit on error


# the function which runs
#    "pisms -mismip EXPER -initials MYINITIALS OTHEROPTS"
# on NN processors
mpimismip()
{
    # change this if "bin/pisms", etc.:
    cmd="$MPIDO -np $1 pisms -mismip $2 -initials $MYINITIALS -extras -ksp_rtol 1.0e-7 $3"
    if [ $SHOWONLY = 1 ] ; then
      echo "would try '$cmd'"
    else
      echo "date = '`date`' on host '`uname -n`':"
      echo "trying '$cmd'"
      echo
      $cmd
    fi
}


## exper 1:
for MODEL in $MODELRANGE
do

  for GRID in $GRIDRANGE
  do
    case $GRID in
      1   ) GRIDMY=151; SKIP=;;
      2   ) GRIDMY=1501; SKIP="-skip 10 ";;
      3   ) GRIDMY=601; SKIP="-skip 10 ";;
    esac

    for ES in 1a 1b
    do
      mpimismip $NN $ES "-model ${MODEL} -step 1 ${SKIP}-Mx 3 -Mz 15 -My ${GRIDMY}"
      for STEP in 2 3 4 5 6 7 8 9
      do
        PREV=$(($STEP-1))
        INNAME=${MYINITIALS}${MODEL}_${ES}_M${GRID}_A${PREV}.nc
        mpimismip $NN $ES "-model ${MODEL} -step ${STEP} ${SKIP}-if ${INNAME}"
      done # for STEP
    done # for ES

  done # for GRID

done # for MODEL

#exit


# experiment 2 starts from end of 1, so above loop should be checked for completion
for MODEL in $MODELRANGE
do

  for GRID in $GRIDRANGE
  do
    case $GRID in
      1   ) GRIDMY=151; SKIP=;;
      2   ) GRIDMY=1501; SKIP="-skip 10 ";;
      3   ) GRIDMY=601; SKIP="-skip 10 ";;
    esac

    for SLIDING in a b
    do
      INNAME=${MYINITIALS}${MODEL}_1${SLIDING}_M${GRID}_A9.nc
      mpimismip $NN 2$SLIDING "-model ${MODEL} -step 8 ${SKIP}-if ${INNAME}"
      for STEP in 7 6 5 4 3 2 1
      do
        PREV=$(($STEP+1))
        INNAME=${MYINITIALS}${MODEL}_2${SLIDING}_M${GRID}_A${PREV}.nc
        mpimismip $NN 2$SLIDING "-model ${MODEL} -step ${STEP} ${SKIP}-if ${INNAME}"
      done # for STEP
    done # for SLIDING

  done # for GRID

done # for MODEL
                           
#exit


## exper 3:
for MODEL in $MODELRANGE
do

  for GRID in $GRIDRANGE
  do
    case $GRID in
      1   ) GRIDMY=151; SKIP=;;
      2   ) GRIDMY=1501; SKIP="-skip 10 ";;
      3   ) GRIDMY=601; SKIP="-skip 10 ";;
    esac

    # exper 3a
    mpimismip $NN 3a "-model ${MODEL} -step 1 ${SKIP}-Mx 3 -Mz 15 -My ${GRIDMY}"
    for STEP in 2 3 4 5 6 7 8 9 10 11 12 13
    do
      PREV=$(($STEP-1))
      INNAME=${MYINITIALS}${MODEL}_3a_M${GRID}_A${PREV}.nc
      mpimismip $NN 3a "-model ${MODEL} -step ${STEP} ${SKIP}-if ${INNAME}"
    done # for STEP

    # exper 3b
    mpimismip $NN 3b "-model ${MODEL} -step 1 ${SKIP}-Mx 3 -Mz 15 -My ${GRIDMY}"
    for STEP in 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    do
      PREV=$(($STEP-1))
      INNAME=${MYINITIALS}${MODEL}_3b_M${GRID}_A${PREV}.nc
      mpimismip $NN 3b "-model ${MODEL} -step ${STEP} ${SKIP}-if ${INNAME}"
    done # for STEP

  done # for GRID

done # for MODEL

