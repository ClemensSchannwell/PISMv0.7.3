import os
Import('env prefix pism_libs')

libpism_sources = Split("""
extrasGSL.cc grid.cc iMbasal.cc iMbeddef.cc iMdefaults.cc iMgrainsize.cc iMIO.cc
iMIOnetcdf.cc iMlegacy.cc iMmacayeal.cc iMoptions.cc iMpdd.cc iMregrid.cc
iMtemp.cc iMutil.cc iMvelocity.cc iMviewers.cc iceModel.cc materials.cc
nc_util.cc beddefLC.cc forcing.cc cubature.c pism_signal.c""")
libpism = env.SharedLibrary('pism', libpism_sources)

libpismtests_sources = [os.path.join('exact', 'exactTest') + t + '.c' for t in
                        'sABCDE sFG H I L'.split()]
libpismtests = env.SharedLibrary('pismtests', libpismtests_sources)

testlibs = Split('pismtests gsl gslcblas m')
testsource = [os.path.join('exact', 'simple') + t + '.c' for t in 'ABCD E FG H I L'.split()]
simple = []
for s in testsource:
    p = env.Program(s, LIBS = testlibs)
    simple.append(p)
gridL = env.Program('exact/gridL.c', LIBS = testlibs)

env.Alias('exact', simple + [gridL])

lpism = ['pism'] + pism_libs

## Standard Pism executables
pismr = env.Program('pismr.cc', LIBS = lpism)
pisms = env.Program(Split('pisms.cc iceEISModel.cc iceHEINOModel.cc iceROSSModel.cc'),
      LIBS = lpism)
pismv = env.Program(Split('pismv.cc iCMthermo.cc iceCompModel.cc iceExactStreamModel.cc'),
                     LIBS = ['pismtests'] + lpism)
pant = env.Program('pant.cc', LIBS = lpism)
pgrn = env.Program(['pgrn.cc', 'iceGRNModel.cc'], LIBS = lpism)

## Extras (these will not be installed)
flowTable = env.Program('flowTable.cc', LIBS = lpism)
tryLCbd = env.Program('tryLCbd', Split('exact/tryLCbd.cc beddefLC.cc materials.cc'), LIBS = lpism)
shelf = env.Program('shelf.cc', LIBS = lpism)

env.Alias('pismr', pismr)
env.Alias('pisms', pisms)
env.Alias('pismv', pismv)
env.Alias('pant', pant)
env.Alias('pgrn', pgrn)
env.Alias('extras', [flowTable, tryLCbd])

## This is broken
#env.Alias('shelf', shelf)

## Install
bindir = os.path.join(prefix, 'bin')
libdir = os.path.join(prefix, 'lib')
env.Install(bindir, [pismr, pisms, pismv, pant, pgrn])
env.Install(libdir, [libpism, libpismtests])
ib = env.Alias('install-bin', bindir)
il = env.Alias('install-lib', libdir)
install = env.Alias('install', [ib, il])

#Default(install)
Default(pismr, pisms, pismv, pant, pgrn)
