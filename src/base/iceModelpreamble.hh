// Copyright (C) 2004-2007 Jed Brown and Ed Bueler
//
// This file is part of PISM.
//
// PISM is free software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the Free Software
// Foundation; either version 2 of the License, or (at your option) any later
// version.
//
// PISM is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
//
// You should have received a copy of the GNU General Public License
// along with PISM; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

#ifndef __iceModelpreamble_hh
#define __iceModelpreamble_hh

// this header file is simply added to unclutter iceModel.hh

#include <petsc.h>
#include "materials.hh"

// remove trivial namespace browser from doxygen-erated HTML source browser
/// @cond NAMESPACE_BROWSER
using namespace std;
/// @endcond

// add commentary to first page of doxygen-erated HTML source browser
/*! @cond BROWSER \mainpage 
 *
 * This source browser shows the C++ class structure of PISM.  It 
 * shows all the class inheritance structure and all the members (variables and 
 * methods) of all the PISM classes.  It was automatically generated by doxygen
 * (http://www.doxygen.org/).
 *
 * See the PISM User's Manual (http://www.dms.uaf.edu/~bueler/manual.pdf or 
 * <tt>pism/doc/manual.pdf</tt>) for help with installing and using PISM.
 *
 * See the PISM Reference Manual (<tt>pism/doc/refman.pdf</tt>)
 * for documentation of the continuum models and numerical methods of PISM.
 *
 * There is also a source code browsing tool at the PISM download site
 * (https://gna.org/projects/pism/).  That tool is different from this one.  This one
 * documents the C++ class structure of the current revision.  The one at gna.org
 * shows changes between revisions but it ignors the class structure as it only cares 
 * about source code files as text files and, roughly, ignors their semantics.
 *
@endcond
 */
 

struct MaskInterp {
  int number_allowed;
  int allowed_levels[50];// must be strictly increasing
};

struct PolarStereoParams {
  // these are "double" and not "float" ultimately because of how ncgen works
  double svlfp; // straight_vertical_longitude_from_pole; defaults to 0
  double lopo;  // latitude_of_projection_origin; defaults to 90
  double sp;    // standard_parallel; defaults to -71
};


PetscErrorCode getFlowLawFromUser(MPI_Comm com, IceType* &ice, PetscInt &flowLawNum);


// this utility prints only when verbosityLevel >= thresh; see iMutil.cc
extern PetscInt verbosityLevel;
PetscErrorCode setVerbosityLevel(PetscInt level);
PetscErrorCode verbosityLevelFromOptions();
PetscErrorCode verbPrintf(const int thresh, MPI_Comm comm,const char format[],...);

#endif /* __iceModelpreamble_hh */
