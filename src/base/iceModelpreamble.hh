// Copyright (C) 2004-2007 Jed Brown and Ed Bueler
//
// This file is part of PISM.
//
// PISM is free software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the Free Software
// Foundation; either version 2 of the License, or (at your option) any later
// version.
//
// PISM is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
//
// You should have received a copy of the GNU General Public License
// along with PISM; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

#ifndef __iceModelpreamble_hh
#define __iceModelpreamble_hh

// this header file is simply added to unclutter iceModel.hh

#include <petsc.h>
#include "materials.hh"

// remove trivial namespace browser from doxygen-erated HTML source browser
/// @cond NAMESPACE_BROWSER
using namespace std;
/// @endcond

// add commentary to first page of doxygen-erated HTML source browser
/*! @cond BROWSER \mainpage 
 *
 * This source browser shows the C++ class (object) structure of PISM.  It 
 * shows \em all the classes in PISM, \em all the inheritance structure and
 * \em all the members (variables and methods) of all the PISM classes.  
 * It was automatically generated by doxygen (http://www.doxygen.org/)
 * from comments in the PISM source code.
 *
 * See the PISM User's Manual (http://www.dms.uaf.edu/~bueler/manual.pdf or 
 * <tt>pism/doc/manual.pdf</tt>) for help with installing and using PISM.  
 * Most users should stick to the User's Manual for quite a while; only when 
 * a user needs to extend PISM is a look at this source browser really 
 * worthwhile.
 *
 * See the PISM Reference Manual (http://www.dms.uaf.edu/~bueler/refman.pdf or 
 * <tt>pism/doc/refman.pdf</tt>) for a useful subset of this source browser
 * in PDF form.  The Reference Manual contains the minimum documentation 
 * of the PISM class structure in order to include all the important documentation 
 * of the continuum models and numerical methods of PISM.  (Such continuum model
 * and numerical method documentation is widely scattered in this source browser.)
 *
 * There is also a source code browsing tool at the PISM download site
 * (https://gna.org/projects/pism/).  That tool is <i>very different from this one</i>.  This one
 * documents the C++ class structure of the current revision.  The one at gna.org
 * shows changes between revisions but it ignors the class structure as it only cares 
 * about source code files as text files and generally ignors their semantics.
 *
 * <i>
 * Copyright (C) 2007 Ed Bueler
 *
 * This document is part of PISM.
 *
 * PISM is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 *
 * PISM is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PISM; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA 
 * </i>
 * @endcond
 */
 
// add commentary to first page of doxygen-erated PDF Reference Manual
/*! @cond REFMAN \mainpage
 * 
 * \author Ed Bueler
 *
 * This Reference Manual is a greatly shortened version of the complete HTML
 * PISM source browser at <tt>pism/doc/doxy/html/index.html</tt>.  As with the source 
 * browser, this Manual was automatically generated by doxygen (http://www.doxygen.org/)
 * from comments in the PISM source code.
 *
 * This Manual documents the \em continuum \em models and the \em numerical
 * \em methods in PISM.  It is restricted to documenting the three classes MaterialType
 * (and its derived classes), IceGrid (and its associated class IceParam), and the main
 * PISM class IceModel.  The source files from which this Manual is drawn are limited to 
 * files in the <tt>pism/src/base/</tt> subdirectory.  Note that, by contrast, the source 
 * browser describes \em all classes and 
 * \em all class members and \em all source files in PISM.
 *
 * Most users should start with the PISM User's Manual 
 * (http://www.dms.uaf.edu/~bueler/manual.pdf or <tt>pism/doc/manual.pdf</tt>) for help
 * with installing and using PISM.
 *
 * <i>
 * Copyright (C) 2007 Ed Bueler
 *
 * This document is part of PISM.
 *
 * PISM is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 *
 * PISM is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PISM; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA 
 * </i>
 * @endcond
 */
 

struct titleNname {
  char title[60]; // this short title appears on PETSc graphical viewers and in Matlab output file
                  // (and as pism_short_title (?) attribute in NetCDF?)
  char name[10];  // this name is for NetCDF vars and for Matlab (output) vars
};

struct MaskInterp {
  int number_allowed;
  int allowed_levels[50];// must be strictly increasing
};

struct PolarStereoParams {
  // these are "double" and not "float" ultimately because of how ncgen works
  double svlfp; // straight_vertical_longitude_from_pole; defaults to 0
  double lopo;  // latitude_of_projection_origin; defaults to 90
  double sp;    // standard_parallel; defaults to -71
};


PetscErrorCode getFlowLawFromUser(MPI_Comm com, IceType* &ice, PetscInt &flowLawNum);


// this utility prints only when verbosityLevel >= thresh; see iMutil.cc
extern PetscInt verbosityLevel;
PetscErrorCode setVerbosityLevel(PetscInt level);
PetscErrorCode verbosityLevelFromOptions();
PetscErrorCode verbPrintf(const int thresh, MPI_Comm comm,const char format[],...);

#endif /* __iceModelpreamble_hh */
